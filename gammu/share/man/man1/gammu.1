.TH "GAMMU" "1" "Jun  8 2009" "Gammu 1.24.92" "Gammu Documentation"

.SH "NAME"

.P
Gammu - Does some neat things with your cellular phone or modem.

.SH "SYNOPSIS"
.P
Usage: gammu [\fIparameters\fP] <command> [\fIoptions\fP]


.SH "DESCRIPTION"
.P

.P
This program is a tool for mobile phones. Many vendors and phones
are supported, for actual listing see <http://cihar.com/gammu/phonedb/>.


.SH "OPTIONS"
.P
Parameters before command configure gammu behaviour:
.br
\-c / \-\-config <filename> ... name of configuration file
.br
\-s / \-\-section <confign> ... section of config file to use, eg. 42
.br
\-d / \-\-debug <level> ... debug level (see gammurc(5) for possible values)
.br
\-f / \-\-debug\-file <filename> ... file for logging debug messages


.SS "Commands"
.P
Commands can be specified with or without leading \-\-.


.SS "Calls"
.TP
.BI "answercall" " [ID]"
Answer incoming call.

.TP
.BI "cancelcall" " [ID]"
Cancel incoming call

.TP
.BI "canceldiverts"

.TP
.BI "conferencecall" " ID"

.TP
.BI "dialvoice" " number [show|hide]"
Make voice call from SIM card line set in phone.

.TP
.BI "divert" " get|set all|busy|noans|outofreach all|voice|fax|data [number timeout]"

.TP
.BI "getspeeddial" " start [stop]"

.TP
.BI "getussd" " code"

.TP
.BI "holdcall" " ID"

.TP
.BI "maketerminatedcall" " number length [show|hide]"
Make voice call from SIM card line set in phone which will 
be terminated after \fBlength\fR seconds.

.TP
.BI "monitor" " [times]"
Get phone status and writes continuously to standard output. Press Ctrl+C
to break this state.

.TP
.BI "senddtmf" " sequence"
Plays DTMF sequence. In some phones available only during calls

.TP
.BI "splitcall" " ID"

.TP
.BI "switchcall" " [ID]"

.TP
.BI "transfercall" " [ID]"

.TP
.BI "unholdcall" " ID"


.SS "SMS and EMS"
.P

Sending messages might look a bit complicated on first attempt to use.
But be patient, the command line has been written in order to allow
almost every usage. See EXAMPLE section for some hints on usage.

.TP
.BI "addsms" " folder file [\-yes]"
Adds SMSes from file (format like backupsms uses) to
selected folder in phone.
.TP
.BI "addsmsfolder" " name"

.TP
.BI "backupsms" " file [\-yes|\-all]"
Stores all SMSes from phone to file. 

Use \-yes for answering yes to all questions (backup all messages and 
delete them from phone), or \-all to just backup all folders while keeping
messages in phone.

.TP
.BI "deleteallsms" " folder"
Delete all SMS from specified SMS folder.

.TP
.BI "deletesms" " folder start [stop]"
Delete SMS from phone. See description for \fBgetsms\fR for info about
sms folders naming convention. 

Locations are numerated from 1.

.TP
.BI "displaysms" " ... (options like in sendsms)"

Displays PDU data of encoded SMS messages. It accepts same parameters and 
behaves same like sendsms.

.TP
.BI "getallsms" " \-pbk"
Get all SMS from phone. In some phones you will have also SMS templates
and info about locations used to save Picture Images. With each sms you
will see location. If you want to get such sms from phone alone, use
\fBgammu getsms 0 location\fR

.TP
.BI "geteachsms" " \-pbk"
Similiary to \fBgetallsms\fR. Difference is, that links all contacenated sms

.TP
.BI "getsms" " folder start [stop]"
Get SMS. 

Locations are numerated from 1.

When give folder 0, sms is given from "flat" memory (all sms from all
folders have unique numbers). It's sometimes emulated by Gammu.
You can use it with all phones.

When give folder 1, 2, etc. sms are taken from Inbox, Outbox, etc.
and each sms has unique number in his folder. Name of folders can
depend on your phone (the most often 1="Inbox", 2="Outbox", etc.).
This method is not supported by all phones (for example, not supported
by Nokia 3310, 5110, 6110). If work with your phone, use
\fBgetsmsfolders\fR to get folders list.

.TP
.BI "getsmsc" " [start [stop]]"
Get SMSC settings from SIM card. 

Locations are numerated from 1.

.TP
.BI "getsmsfolders"
Get names for SMS folders in phone

.TP
.BI "nokiagett9"

.TP
.BI "restoresms" " file [\-yes]"
Restores SMSes from file (format like backupsms uses) to
selected folder in phone. Please note that this overwrites existing
messages in phone (if it supports it).
.TP
.BI "savesms" " VCARD10|VCARD21 file SM|ME location [\-nokia] [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read phonebook entry from file created by \fBbackup\fR option and saves in
VCARD 1.0 (only name and default number) or VCARD 2.1 (all entry details with
all numbers, text and name) format as SMS

.TP
.BI "savesms ANIMATION" " frames file1 file2... [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms BOOKMARK" " file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read WAP bookmark from file created by \fBbackup\fR option and saves in
Nokia format as SMS

.TP
.BI "savesms CALENDAR" " file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read calendar note from file created by \fBbackup\fR option and saves in
VCALENDAR 1.0 format as SMS

.TP
.BI "savesms CALLER" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Save caller logo as sms (Nokia format - size 72x14).

.TP
.BI "savesms EMS" " [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-16bit] [\-format lcrasbiut] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-fixedbitmap file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...] [\-protected number]"

Saves EMS sequence. All parameters after \fB\-unread\fR (like \fB\-defsound\fR) can be used few times.

\fB\-text\fR - adds text

\fB\-unicodefiletext\fR - adds text from Unicode file

\fB\-defanimation\fR - adds default animation with ID specified by user.ID for different phones are different.

\fB\-animation\fR - adds "frames" frames read from file1, file2, etc.

\fB\-defsound\fR - adds default sound with ID specified by user. ID for different phones are different.

\fB\-tone10\fR - adds IMelody version 1.0 read from RTTL or other compatible file

\fB\-tone10long\fR - IMelody version 1.0 saved in one of few SMS with UPI. Phones compatible with UPI (like SonyEricsson phones) will read such ringtone as one

\fB\-tone12\fR - adds IMelody version 1.2 read from RTTL or other compatible file

\fB\-tone12long\fR - IMelody version 1.0 saved in one of few SMS with UPI. Phones compatible with UPI (like SonyEricsson phones) will read such ringtone as one

\fB\-toneSE\fR - adds IMelody in "short" form supported by SonyEricsson phones

\fB\-tone10long\fR - SonyEricsson IMelody saved in one or few SMS with UPI

\fB\-variablebitmap\fR - bitmap in any size saved in one SMS

\fB\-variablebitmaplong\fR - bitmap with maximal size 96x128 saved in one or few sms

\fB\-fixedbitmap \fR - bitmap 16x16 or 32x32

\fB\-protected\fR - all ringtones and bitmaps after this parameter (excluding default ringtones and logos) will be "protected" (in phones compatible with ODI like SonyEricsson products it won't be possible to forward them from phone menu)

\fIExample:\fR gammu savesms EMS \-text "Greetings" \-defsound 1 \-text "from Gammu" \-tone10 axelf.txt \-animation 2 file1.bmp file2.bmp

will create EMS sequence with text "Greetings" and default sound 1 and text "from Gammu" and ringtone axelf.txt and 2 frame animation read from (1'st frame) file1.bmp and (2'nd frame) file2.bmp

\fIExample:\fR gammu savesms EMS \-protected 2 \-variablebitmaplong ala.bmp \-toneSElong axelf.txt \-toneSE ring.txt

ala.bmp and axelf.txt will be "protected"

.TP
.BI "savesms MMSINDICATOR" " URL Title Sender [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms MMSSETTINGS" " file location  [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms OPERATOR" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]"
Save operator logo as sms (Nokia format - size 72x14 or 78x21 after
using \fB\-biglogo\fR).

.TP
.BI "savesms PICTURE" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]"
Save Picture Image as sms (Nokia format - size 72x28).

.TP
.BI "savesms PROFILE" " [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]"
Read ringtone (RTTL) format and bitmap (Picture Image size) and name and save
as Nokia profile.

.TP
.BI "savesms RINGTONE" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]"
Read RTTL ringtone from file and save as SMS into SIM/phone memory.
Ringtone is saved in Nokia format.

\fB\-folder number\fR - save to specified folder. 

Folders are numerated from 1.

The most often folder 1 = "Inbox", 2 = "Outbox", etc.

\fB\-unread\fR - makes message unread. In some phones (like 6210) you won't see 
unread sms envelope after saving such sms. In some phones with internal 
SMS memory (like 6210) after using it with folder 1 SIM SMS memory will be used

\fB\-read\fR - makes message read. In some phones with internal
SMS memory (like 6210) after using it with folder 1 SIM SMS memory will be used
\fB\-unsent\fR - makes message unsent

\fB\-reply\fR - reply SMSC is set

\fB\-sender number\fR - set sender number

\fB\-flash\fR - Class 0 SMS

\fB\-smscset number\fR - SMSC will be taken from set \fBnumber\fR. Default set: 1

\fB\-smscnumber number\fR - SMSC number

\fB\-long\fR - ringtone is saved using Profile style. It can be longer (and saved
in 2 SMS), but decoded only by newer phones (like 33xx)

\fB\-scale\fR - ringtone will have Scale info for each note. It will allow to edit
it correctly later in phone composer (for example, in 33xx)

.TP
.BI "savesms SMSTEMPLATE" " [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...]"

.TP
.BI "savesms TEXT" " [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-inputunicode] [\-16bit] [\-flash] [\-len len] [\-autolen len] [\-unicode] [\-enablevoice] [\-disablevoice] [\-enablefax] [\-disablefax] [\-enableemail] [\-disableemail] [\-voidsms] [\-replacemessages ID] [\-replacefile file] [\-text msgtext] [\-textutf8 msgtext]"
Take text from stdin (or commandline if \-text specified) 
and save as text SMS into SIM/phone memory.

\fB\-folder number\fR - save to specified folder. 

Folders are numerated from 1.

The most often folder 1 = "Inbox", 2 = "Outbox",etc. Use \fBgetsmsfolders\fR to get folder list.

\fB\-unread\fR - makes message unread. In some phones (like 6210)
you won't see unread sms envelope after saving such
sms. In some phones with internal SMS memory (like
6210) after using it with folder 1 SIM SMS memory will be used

\fB\-read\fR - makes message read. In some phones with internal
SMS memory (like 6210) after using it with folder 1 SIM SMS memory will be used

\fB\-unsent\fR - makes message unsent

\fB\-reply\fR - reply SMSC is set

\fB\-sender number\fR - set sender number (default: "Gammu")

\fB\-flash\fR - Class 0 SMS

\fB\-smscset number\fR - SMSC will be taken from set \fBnumber\fR. Default set: 1

\fB\-smscnumber number\fR - SMSC number

\fB\-len len\fR - specify, how many chars will be read. When use this
option and text will be longer than 1 SMS, will be splitted into more
linked SMS

\fB\-autolen len\fR - specify, how many chars will be read. When use this
option and text will be longer than 1 SMS, will be splitted into more
linked SMS.Coding type (SMS default alphabet/Unicode) is set according
to input text

\fB\-enablevoice\fR | \fB\-disablevoice\fR | \fB\-enablefax \fR |
\fB\-disablefax \fR | \fB\-enableemail \fR | \fB\-disableemail \fR -
sms will set such indicators. Text will be cut to 1 sms.

\fB\-voidsms\fR - many phones after receiving it won't display anything,
only beep, vibrate or turn on light. Text will be cut to 1 sms.

\fB\-unicode\fR - SMS will be saved in Unicode format

\fB\-inputunicode\fR - input text is in Unicode.

\fB\-text\fR - get text from command line instead of stdin.

\fB\-textutf8\fR - get text in UTF-8 from command line instead of stdin.

\fITIP:\fR
You can create Unicode file using WordPad in Win32 (during saving select
"Unicode Text Document" format). In Unix can use for example YUdit.

\fB\-replacemessages ID\fR - \fBID\fR can be 1..7. When you will use option and
send more single SMS to one recipient with the same ID, each another SMS will
replace each previous with the same ID

\fB\-replacefile file\fR  - when you want, you can make file in such format:
\fBsrc_unicode_char1, dest_unicode_char1, src_unicode_char2, dest_unicode_char2\fR
(everything in one line). After reading text for SMS from stdin there will
be made translation and each src char will be converted to dest char. In docs
there is example file (\fIreplace.txt\fR), which will change all "a" chars to "1"

\fITIP:\fR when use ~ char in sms text and \fB\-unicode\fR option
(Unicode coding required), text of sms after ~ char will blink in some phones
(like N33xx)

\fIExample:\fR echo some_text | gammu savesms TEXT

.TP
.BI "savesms TODO" " file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms WAPINDICATOR" " URL Title [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms WAPSETTINGS" " file location DATA|GPRS [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read WAP settings from file created by \fBbackup\fR option and saves in Nokia format as SMS

.TP
.BI "sendsms" " VCARD10|VCARD21 destination file SM|ME location [\-nokia] [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms ANIMATION" " destination frames file1 file2... [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms BOOKMARK" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms CALENDAR" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms CALLER" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms EMS" " destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-16bit] [\-format lcrasbiut] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-fixedbitmap file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...] [\-protected number]"

.TP
.BI "sendsms MMSINDICATOR" " destination URL Title Sender [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

Sends a message with MMS indication. The recipient phone will then download
MMS from given URL and display it.

Please note that you should provide valid smil data on that URL.

.TP
.BI "sendsms MMSSETTINGS" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms OPERATOR" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]"

.TP
.BI "sendsms PICTURE" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]"

.TP
.BI "sendsms PROFILE" " destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]"

.TP
.BI "sendsms RINGTONE" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]"

.TP
.BI "sendsms SMSTEMPLATE" " destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-unicode] [\-text text] [\-unicodefiletext file] [\-defsound ID] [\-defanimation ID] [\-tone10 file] [\-tone10long file] [\-tone12 file] [\-tone12long file] [\-toneSE file] [\-toneSElong file] [\-variablebitmap file] [\-variablebitmaplong file] [\-animation frames file1 ...]"

.TP
.BI "sendsms TEXT" " destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-inputunicode] [\-16bit] [\-flash] [\-len len] [\-autolen len] [\-unicode] [\-enablevoice] [\-disablevoice] [\-enablefax] [\-disablefax] [\-enableemail] [\-disableemail] [\-voidsms] [\-replacemessages ID] [\-replacefile file] [\-text msgtext] [\-textutf8 msgtext]"

.TP
.BI "sendsms TODO" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms WAPINDICATOR" " destination URL Title [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms WAPSETTINGS" " destination file location DATA|GPRS [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"


.SS "Memory (phonebooks and calls)"
.TP
.BI "addcategory" " TODO|PHONEBOOK text"

.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "deleteallmemory" " DC|MC|RC|ON|VM|SM|ME|MT|FD|SL"
Deletes all entries from specified memory type.
.TP
.BI "deletememory" " DC|MC|RC|ON|VM|SM|ME|MT|FD|SL start [stop]"
Deletes entries in specified range from specified memory type.
.TP
.BI "getallcategory" " TODO|PHONEBOOK"

.TP
.BI "getallmemory" " DC|MC|RC|ON|VM|SM|ME|MT|FD|SL"

.TP
.BI "getcategory" " TODO|PHONEBOOK start [stop]"

.TP
.BI "getmemory" " DC|MC|RC|ON|VM|SM|ME|MT|FD|SL start [stop [\-nonempty]]"
Get memory location from phone. 

Locations are numerated from 1.

\fBDC\fR = Dialled calls
.br
\fBMC\fR = Missed calls
.br
\fBRC\fR = Received calls
.br
\fBON\fR = Own numbers
.br
\fBVM\fR = voice mailbox
.br
\fBSM\fR = SIM phonebook
.br
\fBME\fR = phone internal phonebook
.br
\fBFD\fR = fixed dialling
.br
\fBSL\fR = sent SMS log

.TP
.BI "getspeeddial" " start [stop]"

.TP
.BI "listmemorycategory" " text|number"

.TP
.BI "nokiagetpbkfeatures" " memorytype"

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.

.TP
.BI "savefile" " VCARD10|VCARD21 target.vcf file SM|ME location"

.TP
.BI "savesms" " VCARD10|VCARD21 file SM|ME location [\-nokia] [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read phonebook entry from file created by \fBbackup\fR option and saves in
VCARD 1.0 (only name and default number) or VCARD 2.1 (all entry details with
all numbers, text and name) format as SMS

.TP
.BI "searchmemory" " text"

.TP
.BI "sendsms" " VCARD10|VCARD21 destination file SM|ME location [\-nokia] [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"


.SS "Filesystem"
.TP
.BI "addfile" " folderID name [\-type JAR|BMP|PNG|GIF|JPG|MIDI|WBMP|AMR|3GP|NRT] [\-readonly] [\-protected] [\-system] [\-hidden] [\-newtime]"
Add file with specified name to folder with specified folder ID.

.B \-type 
- file type was required for filesystem 1 in Nokia phones (current filesystem 2 doesn't need this)

.B \-readonly, \-protected, \-system, \-hidden
- you can set readonly, protected (file can't be for example forwarded from phone menu), system and hidden (file is hidden from phone menu) file attributes

.B \-newtime 
- after using it date/time of file modification will be set to moment of uploading 


.TP
.BI "addfolder" " parentfolderID name"

.TP
.BI "deletefiles" " fileID"

.TP
.BI "deletefolder" " name"

.TP
.BI "getfilefolder" " ID1, ID2, ..."

.TP
.BI "getfiles" " ID1, ID2, ..."

.TP
.BI "getfilesystem" " [\-flatall|\-flat]"
Display info about all folders and files in phone memory/memory card. By default there is tree displayed, you can change it:

.B \-flatall
there are displayed full file/folder details like ID (first parameter in line)

.B \-flat

Please note, that in some phones (like N6230) content of some folders (with more files) can be cut (only part of files will be displayed) for example on infrared connection. This is not Gammu issue, but phone firmware problem.

.TP
.BI "getfilesystemstatus"

.TP
.BI "getfolderlisting" " folderID"

Display files and folders available in folder with given folder ID. You can get ID's using getfilesystem \-flatall.

Please note, that in some phones (like N6230) content of some folders (with more files) can be cut (only part of files will be displayed) for example on infrared connection. This is not Gammu issue, but phone firmware problem.

.TP
.BI "getrootfolders"

Display info about drives available in phone/memory card.

.TP
.BI "nokiaaddfile" " Gallery|Gallery2|Camera|Tones|Tones2|Records|Video|Playlist|MemoryCard file [\-name name] [\-protected] [\-readonly] [\-system] [\-hidden] [\-newtime]"
Install the *.jar/*.jad file pair of a midlet in the application or game menu of the phone. You have to give the name without the jar/jad suffix, otherwise you will get the slightly confusing error message Can't open specified file. Read only ?

The option
.I \-overwrite
deletes the application's .jad and .jar files bevor installing, but doesn't delete the application data. Option
.I \-overwriteall
will also delete all data. Both these options work only for Application or Game upload.

\fIExample:\fR gammu nokiaaddfile Application Alien will read Alien.JAD and Alien.JAR and add to Applications

\fIExample:\fR gammu nokiaaddfile Tones file.mid will read file.mid and add to Tones folder

You can use jadmaker(1) to generate a .jad file from a .jar file.

.TP
.BI "nokiaaddplaylists"

.TP
.BI "sendfile" " name"

.TP
.BI "setfileattrib" " folderID [\-system] [\-readonly] [\-hidden] [\-protected]"


.SS "Logo and pictures"
.TP
.BI "copybitmap" " inputfile [outputfile [OPERATOR|PICTURE|STARTUP|CALLER]]"
Allow to convert logos files to another. When give ONLY inputfile, output will
be written to stdout using ASCII art. When give output file and format, in
some file formats (like NLM) will be set indicator informing about logo type
to given.

.TP
.BI "getbitmap" " DEALER"
In some models it's possible to save dealer welcome note - text displayed
during enabling phone, which can't be edited from phone menu.  Here you can
get it.

.TP
.BI "getbitmap CALLER" " location [file]"
Get caller group logo from phone. Locations 1-5.

.TP
.BI "getbitmap OPERATOR" " [file]"
Get operator logo (picture displayed instead of operator name) from phone.

.TP
.BI "getbitmap PICTURE" " location [file]"
Get Picture Image from phone.

.TP
.BI "getbitmap STARTUP" " [file]"
Get static startup logo from phone. Allow to save it in file.

.TP
.BI "savesms ANIMATION" " frames file1 file2... [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms CALLER" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Save caller logo as sms (Nokia format - size 72x14).

.TP
.BI "savesms OPERATOR" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]"
Save operator logo as sms (Nokia format - size 72x14 or 78x21 after
using \fB\-biglogo\fR).

.TP
.BI "savesms PICTURE" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]"
Save Picture Image as sms (Nokia format - size 72x28).

.TP
.BI "sendsms ANIMATION" " destination frames file1 file2... [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms CALLER" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms OPERATOR" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-netcode netcode] [\-biglogo]"

.TP
.BI "sendsms PICTURE" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-text text] [\-unicode] [\-alcatelbmmi]"

.TP
.BI "setbitmap CALLER" " location [file]"
Set caller logo.

.TP
.BI "setbitmap COLOUROPERATOR" " [fileID [netcode]]"

.TP
.BI "setbitmap COLOURSTARTUP" " [fileID]"

.TP
.BI "setbitmap DEALER" " text"

.TP
.BI "setbitmap OPERATOR" " [file [netcode]]"
Set operator logo in phone. When won't give file and netcode, operator logo
will be removed from phone. When will give only filename, operator logo will
be displayed for your current GSM operator. When give additionaly network
code, it will be displayed for this operator: \fBgammu setbitmap OPERATOR file "260 02"\fR

.TP
.BI "setbitmap PICTURE" " file location [text]"

.TP
.BI "setbitmap STARTUP" " file|1|2|3"
Set startup logo in phone. It can be static (then you will have to give file
name) or one of predefined animated (only some phones like Nokia 3310 or 3330
supports it)

.TP
.BI "setbitmap TEXT" " text"

.TP
.BI "setbitmap WALLPAPER" " fileID"


.SS "Ringtones"
.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "copyringtone" " source destination [RTTL|BINARY]"
Copy source ringtone to destination.

.TP
.BI "getphoneringtone" " location [file]"

Get one of "default" ringtones and saves into file

.TP
.BI "getringtone" " location [file]"
Get ringtone from phone in RTTL or BINARY format. 

Locations are numerated from 1.

.TP
.BI "getringtoneslist"

.TP
.BI "nokiacomposer" " file"
Show, how to enter RTTL ringtone in composer existing in many Nokia phones
(and how should it look like).

.TP
.BI "playringtone" " file"
Play aproximation of ringtone over phone buzzer. File can be in RTTL or BINARY (Nokia DCT3) format.

.TP
.BI "playsavedringtone" " number"

Play one of "built" ringtones. This option is available for DCT4 phones. For getting ringtones list use getringtoneslist.

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.

.TP
.BI "savesms RINGTONE" " file [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]"
Read RTTL ringtone from file and save as SMS into SIM/phone memory.
Ringtone is saved in Nokia format.

\fB\-folder number\fR - save to specified folder. 

Folders are numerated from 1.

The most often folder 1 = "Inbox", 2 = "Outbox", etc.

\fB\-unread\fR - makes message unread. In some phones (like 6210) you won't see 
unread sms envelope after saving such sms. In some phones with internal 
SMS memory (like 6210) after using it with folder 1 SIM SMS memory will be used

\fB\-read\fR - makes message read. In some phones with internal
SMS memory (like 6210) after using it with folder 1 SIM SMS memory will be used
\fB\-unsent\fR - makes message unsent

\fB\-reply\fR - reply SMSC is set

\fB\-sender number\fR - set sender number

\fB\-flash\fR - Class 0 SMS

\fB\-smscset number\fR - SMSC will be taken from set \fBnumber\fR. Default set: 1

\fB\-smscnumber number\fR - SMSC number

\fB\-long\fR - ringtone is saved using Profile style. It can be longer (and saved
in 2 SMS), but decoded only by newer phones (like 33xx)

\fB\-scale\fR - ringtone will have Scale info for each note. It will allow to edit
it correctly later in phone composer (for example, in 33xx)

.TP
.BI "sendsms RINGTONE" " destination file [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-long] [\-scale]"

.TP
.BI "setringtone" " file [\-location location] [\-scale] [\-name name]"
Set ringtone in phone. When don't give location, it will be written
"with preview" (in phones supporting this feature like 61xx or 6210).
When use RTTL ringtones, give location and use \fB\-scale\fR, there will be written
scale info with each note. It will avoid scale problems available during
editing ringtone in composer from phone menu (for example, in N33xx).

\fITIP:\fR when use ~ char in ringtone name, in some phones (like 33xx)
name will blink later in phone menus


.SS "Calendar notes"
.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "deletecalendar" " start [stop]"

.TP
.BI "getallcalendar"

.TP
.BI "getcalendar" " start [stop]"

.TP
.BI "getcalendarsettings"

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.

.TP
.BI "savefile CALENDAR" " target.vcs file location"
Allows to convert between various backup formats which gammu
supports for calendar events. The file type is guessed (for input file
guess is based on extension and file content, for output solely on 
extension).

For example if you want to convert single entry from gammu native 
backup to vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP
.BI "savesms CALENDAR" " file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read calendar note from file created by \fBbackup\fR option and saves in
VCALENDAR 1.0 format as SMS

.TP
.BI "sendsms CALENDAR" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"


.SS "To do lists"
.TP
.BI "addcategory" " TODO|PHONEBOOK text"

.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "deletetodo" " start [stop]"

.TP
.BI "getallcategory" " TODO|PHONEBOOK"

.TP
.BI "getalltodo"

.TP
.BI "getcategory" " TODO|PHONEBOOK start [stop]"

.TP
.BI "gettodo" " start [stop]"

.TP
.BI "listtodocategory" " text|number"

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.

.TP
.BI "savefile TODO" " target.vcs file location"
Allows to convert between various backup formats which gammu
supports for todo events. The file type is guessed (for input file
guess is based on extension and file content, for output solely on 
extension).

For example if you want to convert single entry from gammu native 
backup to vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP
.BI "savesms TODO" " file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms TODO" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"


.SS "Notes"
.TP
.BI "getallnotes"


.SS "Date, time and alarms"
.TP
.BI "getalarm" " [start]"
Get alarm from phone, if no location is specified,
1 is used.

.TP
.BI "getdatetime"
Get date and time from phone

.TP
.BI "setalarm" " hour minute"
Sets repeating alarm in phone on selected time.
.TP
.BI "setdatetime" " [HH:MM[:SS]] [YYYY/MM/DD]"
Set date and time in phone to date and time set in computer. Please 
note, that this option doesn't show clock on phone screen. It only set
date and time.

\fITIP:\fR you can make such synchronization each time, when will connect
your phone and use Gammu. See gammurc(5) for details.


.SS "Categories"
.TP
.BI "addcategory" " TODO|PHONEBOOK text"

.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "getallcategory" " TODO|PHONEBOOK"

.TP
.BI "getcategory" " TODO|PHONEBOOK start [stop]"

.TP
.BI "listmemorycategory" " text|number"

.TP
.BI "listtodocategory" " text|number"

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.


.SS "Backing up and restoring"
.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "addsms" " folder file [\-yes]"
Adds SMSes from file (format like backupsms uses) to
selected folder in phone.
.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "backupsms" " file [\-yes|\-all]"
Stores all SMSes from phone to file. 

Use \-yes for answering yes to all questions (backup all messages and 
delete them from phone), or \-all to just backup all folders while keeping
messages in phone.

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.

.TP
.BI "restoresms" " file [\-yes]"
Restores SMSes from file (format like backupsms uses) to
selected folder in phone. Please note that this overwrites existing
messages in phone (if it supports it).
.TP
.BI "savefile" " VCARD10|VCARD21 target.vcf file SM|ME location"

.TP
.BI "savefile BOOKMARK" " target.url file location"

.TP
.BI "savefile CALENDAR" " target.vcs file location"
Allows to convert between various backup formats which gammu
supports for calendar events. The file type is guessed (for input file
guess is based on extension and file content, for output solely on 
extension).

For example if you want to convert single entry from gammu native 
backup to vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260

.TP
.BI "savefile TODO" " target.vcs file location"
Allows to convert between various backup formats which gammu
supports for todo events. The file type is guessed (for input file
guess is based on extension and file content, for output solely on 
extension).

For example if you want to convert single entry from gammu native 
backup to vCalendar, you need following command:

    gammu savefile CALENDAR output.vcs myCalendar.backup 260


.SS "Nokia specific"
.TP
.BI "nokiaaddfile" " Gallery|Gallery2|Camera|Tones|Tones2|Records|Video|Playlist|MemoryCard file [\-name name] [\-protected] [\-readonly] [\-system] [\-hidden] [\-newtime]"
Install the *.jar/*.jad file pair of a midlet in the application or game menu of the phone. You have to give the name without the jar/jad suffix, otherwise you will get the slightly confusing error message Can't open specified file. Read only ?

The option
.I \-overwrite
deletes the application's .jad and .jar files bevor installing, but doesn't delete the application data. Option
.I \-overwriteall
will also delete all data. Both these options work only for Application or Game upload.

\fIExample:\fR gammu nokiaaddfile Application Alien will read Alien.JAD and Alien.JAR and add to Applications

\fIExample:\fR gammu nokiaaddfile Tones file.mid will read file.mid and add to Tones folder

You can use jadmaker(1) to generate a .jad file from a .jar file.

.TP
.BI "nokiaaddplaylists"

.TP
.BI "nokiacomposer" " file"
Show, how to enter RTTL ringtone in composer existing in many Nokia phones
(and how should it look like).

.TP
.BI "nokiadebug" " filename [[v11\-22] [,v33\-44]...]"

.TP
.BI "nokiadisplayoutput"

.TP
.BI "nokiadisplaytest" " number"

.TP
.BI "nokiagetadc"

.TP
.BI "nokiagetoperatorname"
6110.c phones have place for name for one GSM network (of course, with flashing it's
possible to change all names, but Gammu is not flasher ;\-)). You can get this
name using this option.

.TP
.BI "nokiagetpbkfeatures" " memorytype"

.TP
.BI "nokiagetscreendump"

.TP
.BI "nokiagett9"

.TP
.BI "nokiagetvoicerecord" " location"

Get voice record from location and save to WAV file. File is
coded using GSM 6.10 codec (available for example in win32). Name
of file is like name of voice record in phone.

.TP
.BI "nokiamakecamerashoot"

.TP
.BI "nokianetmonitor" " test"
Takes output or set netmonitor for Nokia DCT3 phones.

\fITIP:\fR For more info about this option, please visit
\fIhttp://www.mwiacek.com\fR and read netmonitor manual.

\fITIP:\fR test \fB243\fR enables all tests (after using command
\fBgammu nokianetmonitor 243\fR in some phones like 6210 or 9210 have to
reboot them to see netmonitor menu)

.TP
.BI "nokianetmonitor36"
Reset counters from netmonitor test 36 in Nokia DCT3 phones.

\fITIP:\fR For more info about this option, please visit
\fIwww.mwiacek.com\fR and read netmonitor manual.

.TP
.BI "nokiasecuritycode"
Get/reset to "12345" security code

.TP
.BI "nokiaselftests"

.TP
.BI "nokiasetlights" " keypad|display|torch on|off"

.TP
.BI "nokiasetoperatorname" " [networkcode name]"

.TP
.BI "nokiasetphonemenus"
Enable all (?) possible menus for DCT3 Nokia phones:

1. ALS (Alternative Line Service) option menu
.br
2. vibra menu for 3210
.br
3. 3315 features in 3310 5.45 and higher
.br
4. two additional games (React and Logic) for 3210 5\.31 and higher
.br
5. WellMate menu for 6150
.br
6. NetMonitor

and for DCT4:

1. ALS (Alternative Line Service) option menu
.br
2. Bluetooth, WAP bookmarks and settings menu, ... (6310i)
.br
3. GPRS Always Online
.br
 ...

.TP
.BI "nokiasetvibralevel" " level"
Set vibra power to "level" (given in percent)

.TP
.BI "nokiatuneradio"

.TP
.BI "nokiavibratest"


.SS "Siemens specific"
.TP
.BI "siemensnetmonact" " netmon_type (1\-full, 2\-simple)"

.TP
.BI "siemensnetmonitor" " test"

.TP
.BI "siemenssatnetmon"


.SS "Network"
.TP
.BI "getgprspoint" " start [stop]"

.TP
.BI "listnetworks" " [country]"
Show names/codes of GSM networks known for Gammu

.TP
.BI "monitor" " [times]"
Get phone status and writes continuously to standard output. Press Ctrl+C
to break this state.

.TP
.BI "networkinfo"

.TP
.BI "nokiadebug" " filename [[v11\-22] [,v33\-44]...]"

.TP
.BI "nokiagetoperatorname"
6110.c phones have place for name for one GSM network (of course, with flashing it's
possible to change all names, but Gammu is not flasher ;\-)). You can get this
name using this option.

.TP
.BI "nokianetmonitor" " test"
Takes output or set netmonitor for Nokia DCT3 phones.

\fITIP:\fR For more info about this option, please visit
\fIhttp://www.mwiacek.com\fR and read netmonitor manual.

\fITIP:\fR test \fB243\fR enables all tests (after using command
\fBgammu nokianetmonitor 243\fR in some phones like 6210 or 9210 have to
reboot them to see netmonitor menu)

.TP
.BI "nokiasetoperatorname" " [networkcode name]"

.TP
.BI "setautonetworklogin"

.TP
.BI "siemensnetmonact" " netmon_type (1\-full, 2\-simple)"

.TP
.BI "siemensnetmonitor" " test"

.TP
.BI "siemenssatnetmon"


.SS "WAP settings and bookmarks"
.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "deletewapbookmark" " start [stop]"
Delete WAP bookmarks from phone. 

Locations are numerated from 1.

.TP
.BI "getchatsettings" " start [stop]"

.TP
.BI "getsyncmlsettings" " start [stop]"

.TP
.BI "getwapbookmark" " start [stop]"
Get WAP bookmarks from phone. 

Locations are numerated from 1.

.TP
.BI "getwapsettings" " start [stop]"
Get WAP settings from phone. 

Locations are numerated from 1.

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.

.TP
.BI "savefile BOOKMARK" " target.url file location"

.TP
.BI "savesms BOOKMARK" " file location [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read WAP bookmark from file created by \fBbackup\fR option and saves in
Nokia format as SMS

.TP
.BI "savesms WAPINDICATOR" " URL Title [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms WAPSETTINGS" " file location DATA|GPRS [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"
Read WAP settings from file created by \fBbackup\fR option and saves in Nokia format as SMS

.TP
.BI "sendsms BOOKMARK" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms WAPINDICATOR" " destination URL Title [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms WAPSETTINGS" " destination file location DATA|GPRS [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"


.SS "MMS and MMS settings"
.TP
.BI "getallmms" " [\-save]"

.TP
.BI "geteachmms" " [\-save]"

.TP
.BI "getmmsfolders"

.TP
.BI "getmmssettings" " start [stop]"

.TP
.BI "readmmsfile" " file [\-save]"

.TP
.BI "savesms MMSINDICATOR" " URL Title Sender [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "savesms MMSSETTINGS" " file location  [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

.TP
.BI "sendsms MMSINDICATOR" " destination URL Title Sender [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"

Sends a message with MMS indication. The recipient phone will then download
MMS from given URL and display it.

Please note that you should provide valid smil data on that URL.

.TP
.BI "sendsms MMSSETTINGS" " destination file location [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num]"


.SS "Phone tests"
.TP
.BI "nokiadisplaytest" " number"

.TP
.BI "nokiagetadc"

.TP
.BI "nokiaselftests"

.TP
.BI "nokiasetlights" " keypad|display|torch on|off"

.TP
.BI "nokiavibratest"


.SS "FM radio"
.TP
.BI "addnew" " file [\-yes]"
Adds data written in file created using \fBbackup option\fR. All things
backup'ed by \fBbackup\fR can be restored (when made backup to Gammu text
file).

Please note that this adds all content of backup file to phone and
does not care about current data in the phone (no duplicates are 
detected).

.TP
.BI "backup" " file [\-yes]"
Backup your phone to file. It's possible to backup (depends on phone and backup format):

* phonebook from SIM and phone memory
.br
* calendar notes
.br
* SMSC settings
.br
* operator logo
.br
* startup (static) logo or startup text
.br
* WAP bookmarks
.br
* WAP settings
.br
* caller logos and groups
.br
* user ringtones
.br

There are various backup formats supported and the backup format is guessed
based on file extension:

* .lmb - Nokia backup, supports contacts, caller logos and startup logo.
.br
* .vcs - vCalendar, supports calendar and todo.
.br
* .vcf - vCard, supports contacts.
.br
* .ldif - LDAP import, supports contacts.
.br
* .ics - iCalendar, supports calendar and todo.
.br
* Any other extension is Gammu backup file and it supports all data mentioned above.
.br

\fITIP:\fR if you will backup settings to Gammu text file, it will be possible to edit
it. It's easy: many things in this file will be written double - once in Unicode,
once in ASCII. When you will remove Unicode version Gammu will use ASCII
on \fBrestore\fR (and you can easy edit ASCII text) and will convert it
according to your OS locale. When will be available Unicode version of text,
it will be used instead of ASCII (usefull with Unicode phones - it isn't important,
what locale is set in computer and no conversion Unicode \-> ASCII and ASCII \->
Unicode is done).

\fITIP:\fR you can use any editor with regular expressions function to edit
backup text file. Example: TextPad 4.2.2 from http://www.textpad.com/
with regular expressions based on POSIX standard P1003.2 is OK for it.
Few examples for it:

.br
* to remove info about voice tags:
.br
FROM: ^Entry\\([0\-9][0\-9]\\)VoiceTag = \\(.*\\)\\n
.br
TO:
.br

* to change all numbers starting from +3620, +3630, +3660, +3670
to +3620
.br
Find: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\(20\\|30\\|60\\|70\\)
.br
Repl: Type = NumberMobile\\nEntry\\1Text = "\\+3620
.br

* to change phone numbers type to mobile for numbers starting from
+3620, +3630,... and removing the corresponding TextUnicode line
.br
F: Type = NumberGeneral\\nEntry\\([0\-9][0\-9]\\)Text = "\\+36\\([2367]0\\)\\([^\\"]*\\)"\\nEntry\\([0\-9][0\-9]\\)TextUnicode = \\([^\\n]*\\)\\n
.br
R: Type = NumberMobile\\nEntry\\1Text = "\\+36\\2\\3"\\n

.TP
.BI "clearall"

.TP
.BI "getfmstation" " start [stop]"
Show info about FM stations in phone

.TP
.BI "nokiatuneradio"

.TP
.BI "restore" " file [\-yes]"
Restore settings written in file created using \fBbackup\fR option. 

Please note that restoring deletes all current content in phone. If you
want only to add entries to phone, use addnew.

In some phones restoring calendar notes will not show error, but won't
be done, when phone doesn't have set clock inside.


.SS "Phone information"
.TP
.BI "checkfirmware"

Gammu connects to www.gammu.org and checks for latest firmware versions
available for the device. The file
<http://www.gammu.org/support/phones/phonedbxml.php?model=x> will be
downloaded, all phone details will be read from it and (if any higher firmware
exist) displayed info to user on each application startup. No private data are
sent to server. Internet connection to www.gammu.org on port 80 required.

.TP
.BI "getdisplaystatus"

.TP
.BI "getsecuritystatus"
Show, if phone wait for security code (like PIN, PUK, etc.) or not

.TP
.BI "identify"
Show the most important phone data.

.TP
.BI "monitor" " [times]"
Get phone status and writes continuously to standard output. Press Ctrl+C
to break this state.

.TP
.BI "nokiasecuritycode"
Get/reset to "12345" security code


.SS "Phone settings"
.TP
.BI "getcalendarsettings"

.TP
.BI "getprofile" " start [stop]"

.TP
.BI "resetphonesettings" " PHONE|DEV|UIF|ALL|FACTORY"
Reset phone settings. \fIBE CAREFULL !!!!\fR

\fBPHONE:\fR
.br

\fBDEV:\fR
.br

\fBALL:\fR 

Clear user settings
.br
* removes or set logos to default
.br
* set default phonebook and other menu settings
.br
* clear T9 words,
.br
* clear call register info
.br
* set default profiles settings 
.br
* clear user ringtones

\fBUIF:\fR
.br
* changes like after \fBALL\fR
.br
* disables netmon and PPS (all "hidden" menus)

\fBFACTORY:\fR
.br
* changes like after \fBUIF\fR
.br
* clear date/time

.TP
.BI "savesms PROFILE" " [\-folder id] [\-unread] [\-read] [\-unsent] [\-sent] [\-sender number] [\-smsname name] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]"
Read ringtone (RTTL) format and bitmap (Picture Image size) and name and save
as Nokia profile.

.TP
.BI "sendsms PROFILE" " destination [\-report] [\-validity HOUR|6HOURS|DAY|3DAYS|WEEK|MAX] [\-save [\-folder number]] [\-smscset number] [\-smscnumber number] [\-reply] [\-maxsms num] [\-name name] [\-bitmap bitmap] [\-ringtone ringtone]"


.SS "Dumps decoding"
.TP
.BI "decodebinarydump" " file [phonemodel]"
After using option \fBlogfile\fR with name \fBbinary\fR (see \fI/readme.txt\fR for
info about this method of reporting bugs) created file can be decoded using
this option. It's available only, if Gammu was compiled with debug.


.TP
.BI "decodesniff" " MBUS2|IRDA file [phonemodel]"
Option available only, if Gammu was compiled with debug. Allows to decode
sniffs. See \fI/docs/develop/develop.txt\fR for more details.

.TP
.BI "makeconverttable" " file"


.SS "Functions that don't fit elsewhere"
.TP
.BI "batch" " [file]"

.TP
.BI "entersecuritycode" " PIN|PUK|PIN2|PUK2|PHONE|NETWORK code|\-"
Allow to enter security code from PC. When code is \-, it is read from stdin.

.TP
.BI "nokiagetscreendump"

.TP
.BI "nokiagetvoicerecord" " location"

Get voice record from location and save to WAV file. File is
coded using GSM 6.10 codec (available for example in win32). Name
of file is like name of voice record in phone.

.TP
.BI "nokiamakecamerashoot"

.TP
.BI "nokiasetphonemenus"
Enable all (?) possible menus for DCT3 Nokia phones:

1. ALS (Alternative Line Service) option menu
.br
2. vibra menu for 3210
.br
3. 3315 features in 3310 5.45 and higher
.br
4. two additional games (React and Logic) for 3210 5\.31 and higher
.br
5. WellMate menu for 6150
.br
6. NetMonitor

and for DCT4:

1. ALS (Alternative Line Service) option menu
.br
2. Bluetooth, WAP bookmarks and settings menu, ... (6310i)
.br
3. GPRS Always Online
.br
 ...

.TP
.BI "nokiasetvibralevel" " level"
Set vibra power to "level" (given in percent)

.TP
.BI "presskeysequence" " mMnNpPuUdD+\-123456789*0#gGrR<>[]hHcCjJfFoOmMdD@"
Press specified key sequence on phone keyboard

\fBmM\fR - Menu
.br
\fBnN\fR - Names key
.br
\fBpP\fR - Power
.br
\fBuU\fR - Up
.br
\fBdD\fR - Down
.br
\fB+\-\fR - +\-
.br
\fBgG\fR - Green
.br
\fBrR\fR - Red
.br
\fB123456789*0#\fR is numeric keyboard

.TP
.BI "reset" " SOFT|HARD"
Make phone reset: soft (without asking for PIN) or hard (with PIN).

\fINote:\fR some phones will make hard reset even with \fBSOFT\fR option.

.TP
.BI "searchphone" " [\-debug]"


.SS "Gammu information"
.TP
.BI "checkversion" " [stable]"
Checks whether there is newer Gammu version available online 
(if Gammu has been compiled with CURL). If you pass additional parameter stable, only
stable versions will be checked.

.TP
.BI "features"

.TP
.BI "help"
Output help information and exit.

.TP
.BI "version"
Output version information and exit.


.SH "FILES"

.P 
\fI~/.gammurc\fP
.br
\fI/usr/share/doc/gammu/*\fP
.br
\fI/dev/ircomm?\fP
.br
\fI/dev/ttyS?\fP
.br
\fI/dev/ttyACM?\fP

.SH "EXAMPLE"

.P 
To check it out, you need to have configuration file for gammu, see gammurc(5)
for more details about it.

.TP
Save text message up to standard 160 chars:

echo "All your base are belong to us" | gammu savesms TEXT

or 

gammu savesms TEXT \-text "All your base are belong to us"

.TP
Save long text message:

echo "All your base are belong to us" | gammu savesms TEXT \-len 400

or 

gammu savesms TEXT \-len 400 \-text "All your base are belong to us"

or

gammu savesms EMS \-text "All your base are belong to us"

.TP
Save some funky message with predefined sound and animation from 2 bitmaps:

gammu savesms EMS \-text "Greetings" \-defsound 1 \-text "from Gammu"
\-tone10 axelf.txt \-animation 2 file1.bmp file2.bmp

.TP
Save protected message with ringtone:

gammu savesms EMS \-protected 2 \-variablebitmaplong ala.bmp
\-toneSElong axelf.txt \-toneSE ring.txt

.SH "COPYRIGHT"

Copyright \(co 2003-2009 Marcin Wiacek, Michal Cihar and other authors.
License GPLv2: GNU GPL version 2 <http://www.gnu.org/licenses/old\-licenses/gpl\-2.0.html>
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

.SH "REPORTING BUGS"

There are definitely many bugs, reporting to author is welcome. Please include
some useful information when sending bug reports (especially debug logs,
operating system, it's version and phone information are needed).

.P
To generate debug log, enable it in gammurc (alternatively you can
do it on command line using \-d textall \-f /tmp/gammu.log):

    [gammu]
    ...your connection settings...
    logfile = /tmp/gammu.log
    logformat = textall

With this settings, Gammu generates /tmp/gammu.log on each connection to
phone and stores dump of communication there. You can also find some
hints for improving support for your phone in this log.

Please report bugs to <http://bugs.cihar.com>.

.SH "AUTHOR"

.P 
You can contact authors on <gammu-users@lists.sourceforge.net>.

.P 
\fIMichal Cihar\fR
<michal@cihar.com>
is current project maintainer and contributor of most of AT and OBEX
code.

.P 
\fIMarcin Wiacek\fR
<marcin@mwiacek.com>
is project iniciator and contributor of most Nokia code.

.P
As this project grew from Gnokii, we would like to thanks all Gnokii
developers, especially \fIPavel Janik\fR, \fIPawel Kot\fR
and \fIManfred Jonsson\fR (see CREDITS from Gnokii for all their
contributor).

.P
Many other people have helped with various features, check ChangeLog for
more details.

.SH "SEE ALSO"

.P
gammu\-smsd(1), gammu\-smsd\-inject(1), gammurc(5), jadmaker(1)

Some more hints can be found in README file or on wiki <http://www.gammu.org/>.

Related programs which can be used with GSM modem:

cu(1), gnokii(1), minicom(1)

Graphical interfaces for Gammu:

wammu(1), gmobilemedia(1)

