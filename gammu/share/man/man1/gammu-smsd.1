.TH GAMMU-SMSD 1 "January  15, 2009" "Gammu 1.23.0" "Gammu Documentation"
.SH NAME
gammu\-smsd \- SMS daemon for Gammu
.SH SYNOPSIS
.B gammu\-smsd
[\fIOPTION\fR]...
.SH DESCRIPTION
This manual page documents briefly the
.B gammu\-smsd
command.
.PP
\fBgammu\-smsd\fP is a program that periodically scans GSM modem for received
messages, stores them in defined storage and also sends messages enqueued in
this storage.
.PP
The daemon can reload configuration file after sending hangup signal (SIGHUP)
and properly terminates itself on SIGINT and SIGTERM.
.PP
Program accepts following options (please note that long options might be not
accepted on some platforms):
.TP
\fB\-h\fR, \fB\-\-help\fR
Shows help.
.TP
\fB\-v\fR, \fB\-\-version\fR
Shows version information and compiled in features.
.TP
\fB\-c\fR, \fB\-\-config\fR=\fIfile\fR
Configuration file to use, default is /etc/gammu\-smsdrc, on Windows there is
no default and configuration file path has to be always specified.
.TP
\fB\-p\fR, \fB\-\-pid\fR=\fIfile\fR
Lock file for storing pid, empty for no locking. Not supported on Windows.
.TP
\fB\-U\fR, \fB\-\-user\fR=\fIuser\fR
Drop daemon privileges to chosed user after starting.
.TP
\fB\-G\fR, \fB\-\-group\fR=\fIgroup\fR
Drop daemon privileges to chosen group after starting.
.TP
\fB\-d\fR, \fB\-\-daemon\fR
Daemonize program on startup. Not supported on Windows.
.TP
\fB\-i\fR, \fB\-\-install\-service\fR
Installs SMSD as a Windows service.
.TP
\fB\-u\fR, \fB\-\-uninstall\-service\fR
Uninstalls SMSD as a Windows service.
.TP
\fB\-s\fR, \fB\-\-start\-service\fR
Starts SMSD Windows service.
.TP
\fB\-k\fR, \fB\-\-stop\-service\fR
Stops SMSD Windows service.
.TP
\fB\-X\fR, \fB\-\-suicide\fR=\fIseconds\fR
Kills itself after number of seconds.
.TP
\fB\-S\fR, \fB\-\-run\-service\fR
Runs pogram as SMSD Windows service. This should not be used manually, but
only Windows Service manager should use this command.
.TP
\fB\-n\fR, \fB\-\-service\-name\fR=\fIname\fR
Defines name of a Windows service. Each service requires an unique name, so if
you want to run several SMSD instances, you have to name each service
differently. Default is "GammuSMSD".

.SH EXAMPLE

.SS Linux/Unix Examples

.TP
Start SMSD as a deamon on Linux:

gammu\-smsd \-\-config /etc/gammu\-smsdrc \-\-pid /var/run/gammu\-smsd.pid \-\-daemon

.TP
Start SMSD as a deamon on Linux with reduced privileges:

gammu\-smsd \-\-config /etc/gammu\-smsdrc \-\-pid /var/run/gammu\-smsd.pid \-\-daemon \-\-user gammu \-\-group gammu


.SS Windows Service Examples

.TP
Install Gammu SMSD Windows service:

gammu\-smsd.exe \-c c:\\Gammu\\smsdrc \-i

.TP
Install two instances of SMSD Windows service:

gammu\-smsd.exe \-c c:\\Gammu\\smsdrc\-1 \-n Gammu\-first\-phone \-i

gammu\-smsd.exe \-c c:\\Gammu\\smsdrc\-2 \-n Gammu\-second\-phone \-i

.TP
To uninstall a Windows service:

gammu\-smsd.exe \-u

.SS Troubleshooting Windows Service

If Gammu fails to start as a Windows service (you will usually get "Error
1053: The service did not respond to the start or control request in a timely
fashion"), first check your SMSD logs. If they do not contain any useful hint,
try starting SMSD manually with exactly same parameters as you installed the
service (without \-i), for example:

    gammu-smsd.exe \-c smsdrc

You now should be able to get errors from SMSD even if it fails to start as a
service.

.SH SEE ALSO
gammu\-smsdrc(5), gammu(1), gammu\-smsd\-inject(1), gammu\-smsd\-monitor(1)

gammu\-smsd\-files(7), gammu\-smsd\-mysql(7), gammu\-smsd\-pgsql(7), gammu\-smsd\-dbi(7), gammu\-smsd\-tables(7)
.SH AUTHOR
gammu\-smsd and this manual page were written by Michal Cihar <michal@cihar.com>.
.SH COPYRIGHT
Copyright \(co 2009 Michal Cihar and other authors.
License GPLv2: GNU GPL version 2 <http://www.gnu.org/licenses/old\-licenses/gpl\-2.0.html>
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH REPORTING BUGS
Please report bugs to <http://bugs.cihar.com>.

Before reporting a bug, please enable verbose logging in SMSD configuration:

    [gammu]
    logformat = textall

    [smsd]
    debuglevel = 255
    logfile = smsd.log

and include this verbose log within bug report.
