/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package smpis_system;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vandens
 */
public class sms_list_form extends javax.swing.JInternalFrame {

    public Connection dbconnect = dbconnection.getConnection();
    public DefaultTableModel table_list;
    public String sql;
    private String where = "";
    public String key;
    public String error_msg = "";
    /**
     * Creates new form sample_list_form
     */
    public sms_list_form() {
        initComponents();
        show_list(where);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        param3 = new javax.swing.JTextField();
        param1 = new javax.swing.JTextField();
        param5 = new javax.swing.JComboBox();
        filter = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        param2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        param4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_list_sms = new javax.swing.JTable();
        delete = new javax.swing.JButton();

        setClosable(true);
        setTitle("Data Trafik SMS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filter Data Tunggakan"));

        jLabel2.setText("No Tujuan");

        jLabel4.setText("NIS, Nama Siswa");

        jLabel5.setText("Kategori");

        param5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih satu", "SentItems", "Outbox" }));
        param5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                param5ActionPerformed(evt);
            }
        });

        filter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/filter_add.png"))); // NOI18N
        filter.setText("Filter");
        filter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/filter_delete.png"))); // NOI18N
        clear.setText("Clear");
        clear.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel6.setText("Isi Pesan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(386, Short.MAX_VALUE)
                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(79, 79, 79))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(127, 127, 127)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(param4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(param1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(param2))
                    .addComponent(param5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(param3, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(param1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(param2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(param3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(param4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(param5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filter)
                    .addComponent(clear)))
        );

        table_list_sms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIS", "Nama Siswa", "Kategori", "No Tujuan", "Isi Pesan", "Status", "Waktu Proses", "Waktu Pengiriman"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_list_sms);

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/pencil_delete.png"))); // NOI18N
        delete.setText("Hapus");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 283, Short.MAX_VALUE)
                        .addComponent(delete))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void param5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_param5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_param5ActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:

        String student_id           = param1.getText();
        String student_name         = param2.getText();
        String sms_dest_no          = param3.getText();
        String sms_msg              = param4.getText();
        String category               = (String) param5.getSelectedItem();


        where = "WHERE 1=1 ";
        if(!student_id.equals(""))                                      where = where+" AND student_id          = '"+student_id+"'";
        if(!student_name.equals(""))                                    where = where+" AND student_fullname    LIKE '%"+student_name+"%'";
        if(!category.equals("") && !category.equals("Pilih satu"))      where = where+" AND sms_category        = '"+category+"'";
        if(!sms_dest_no.equals(""))                                     where = where+" AND sms_dest_no         = '"+sms_dest_no+"'";
        if(!sms_msg.equals(""))                                         where = where+" AND sms_msg             LIKE '%"+sms_msg+"%'";
        
        show_list(where);
    }//GEN-LAST:event_filterActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        param1.setText("");
        param2.setText("");
        param3.setText("");
        param4.setText("");
        param5.setSelectedItem("Pilih satu");
        where = "WHERE 1=1 ";
        show_list(where);
    }//GEN-LAST:event_clearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        boolean is_selected = table_list_sms.getSelectedRowCount() > 0;
        if(!is_selected)
            JOptionPane.showMessageDialog(rootPane,"Tidak ada baris terseleksi!","Error",JOptionPane.ERROR_MESSAGE);
        else{
            try{
                key             = (String) table_list_sms.getValueAt(table_list_sms.getSelectedRow(),0);
                String kategori = (String) table_list_sms.getValueAt(table_list_sms.getSelectedRow(),2);
                String updated  = (String) table_list_sms.getValueAt(table_list_sms.getSelectedRow(),6);
                
                System.out.println(key);
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data?", "Konfirmasi", dialogButton);
                if(dialogResult == 0) {
                    try {

                        if(1 == 1){
                            error_msg = "Tambahkan validasi lainnya disini";
                        }


                        if(!error_msg.equals("")){

                            Statement stmt = dbconnect.createStatement();
                                
                            sql     = "DELETE FROM "+kategori.toLowerCase()+" WHERE SenderID = '"+key+"' AND UpdatedInDB = '"+updated+"'";
                            System.out.println(sql);

                            stmt.executeUpdate(sql);
                            JOptionPane.showMessageDialog(rootPane,"Data berhasil dihapus!","Berhasil",JOptionPane.INFORMATION_MESSAGE);


                        }else{

                            JOptionPane.showMessageDialog(null,error_msg,"Error",JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(student_list_form.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null,ex,"Error",JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    System.out.println("No Option");
                }
                show_list(where);

            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"Exception : "+e,"Exception",JOptionPane.ERROR);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton filter;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField param1;
    private javax.swing.JTextField param2;
    private javax.swing.JTextField param3;
    private javax.swing.JTextField param4;
    private javax.swing.JComboBox param5;
    private javax.swing.JTable table_list_sms;
    // End of variables declaration//GEN-END:variables

    private void show_list(String str_where) {        
            Object [] rows={"NIS","Nama Siswa","Kategori","No Tujuan","Isi Pesan","Status","Waktu Proses"};
            table_list=new DefaultTableModel(null,rows);
            table_list_sms.setModel(table_list);
            table_list_sms.setBorder(null);
            jScrollPane1.setVisible(true);
            jScrollPane1.setViewportView(table_list_sms);
            
            try{
                
                //String sql="select * from m_student";
                 if(!str_where.equals("")){
                     sql  = "SELECT * FROM list_sms "+str_where;
                 }else{
                     sql  = "SELECT * FROM list_sms";
                 }
                System.out.println(sql); 
                Statement st = dbconnect.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    String student_id        = rs.getString("student_id");
                    String student_fullname  = rs.getString("student_fullname");
                    String sms_category      = rs.getString("sms_category");
                    String sms_dest_no       = rs.getString("sms_dest_no");
                    String sms_msg           = rs.getString("sms_msg");
                    String sms_status        = rs.getString("sms_status");
                    String sms_inDB          = rs.getString("sms_inDB");
                    //String sms_sendtime      = (String) rs.getString("sms_sendtime");

                    String [] tampil={student_id, student_fullname, sms_category, sms_dest_no, sms_msg, sms_status, sms_inDB};
                    table_list.addRow(tampil);
                }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Terdapat kesalahan query : "+e);
            }
            
    }
}
