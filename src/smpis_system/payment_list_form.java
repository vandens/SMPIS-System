/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package smpis_system;

import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author vandens
 */
public class payment_list_form extends javax.swing.JInternalFrame {

    public Connection dbconnect = dbconnection.getConnection();
    public DefaultTableModel table_list;
    public String sql;
    private String where = "";
    public String key;
    /**
     * Creates new form sample_list_form
     */
    public payment_list_form() {
        initComponents();
        show_list(where);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        param2 = new javax.swing.JTextField();
        param3 = new javax.swing.JTextField();
        param4 = new javax.swing.JTextField();
        param6 = new javax.swing.JComboBox();
        filter = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        param5 = new javax.swing.JTextField();
        param1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_list_payment = new javax.swing.JTable();
        add_new = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setClosable(true);
        setTitle("Data Transaksi Pembayaran");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filter Data Transaksi"));

        jLabel1.setText("Kode Tunggakan");

        jLabel2.setText("Subjek");

        jLabel4.setText("NIS, Nama Siswa");

        jLabel5.setText("Status");

        param6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih satu", "Completed", "Deleted" }));
        param6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                param6ActionPerformed(evt);
            }
        });

        filter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/filter_add.png"))); // NOI18N
        filter.setText("Filter");
        filter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/filter_delete.png"))); // NOI18N
        clear.setText("Clear");
        clear.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel6.setText("No Ref");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(param4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(param5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(param6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(147, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(83, 83, 83)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(param2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(param3, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(param1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(param1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(param2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(param3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(param4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(param5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(param6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filter)
                    .addComponent(clear))
                .addContainerGap())
        );

        table_list_payment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Ref#", "Kode Tunggakan", "Subjek", "NIS", "Nama Siswa", "Tanggal Bayar", "Besar Pembayaran", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_list_payment);

        add_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/pencil_add.png"))); // NOI18N
        add_new.setText("Tambah");
        add_new.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_newActionPerformed(evt);
            }
        });

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/pencil_delete.png"))); // NOI18N
        delete.setText("Hapus");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16/printer.png"))); // NOI18N
        print.setText("Print");
        print.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add_new, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(add_new)
                        .addComponent(delete)
                        .addComponent(print)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void param6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_param6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_param6ActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:

        String payment_code         = param1.getText();
        String debt_code            = param2.getText();
        String payment_subject      = param3.getText();
        String student_id           = param4.getText();
        String student_name         = param5.getText();
        String status               = (String) param6.getSelectedItem();


        where = "WHERE 1=1 ";
        if(!payment_code.equals(""))                                where = where+" AND payment_code          = '"+payment_code+"'";
        if(!debt_code.equals(""))                                   where = where+" AND debt_code             = '"+debt_code+"'";
        if(!payment_subject.equals(""))                             where = where+" AND payment_subject       LIKE '%"+payment_subject+"%'";
        if(!student_id.equals(""))                                  where = where+" AND student_id            = '"+student_id+"'";
        if(!student_name.equals(""))                                where = where+" AND student_fullname      LIKE '%"+student_name+"%'";
        if(!status.equals("") && !status.equals("Pilih satu"))      where = where+" AND payment_status        = '"+status+"'";

        show_list(where);
    }//GEN-LAST:event_filterActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        param2.setText("");
        param3.setText("");
        param4.setText("");
        param6.setSelectedItem("Pilih satu");
        show_list(where);
    }//GEN-LAST:event_clearActionPerformed

    private void add_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_newActionPerformed
        // TODO add your handling code here:
        payment_add_form form = new payment_add_form();
        form.setLocationRelativeTo(null);
        form.setVisible(true);
    }//GEN-LAST:event_add_newActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try{

            key = (String) table_list_payment.getValueAt(table_list_payment.getSelectedRow(),0);
            System.out.println(key);
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data "+key+"?", "Hapus Data "+key, dialogButton);
            if(dialogResult == 0) {
                try {
                    if(1!=1){
                        // tambahkan validasi lainnya disini
                        JOptionPane.showMessageDialog(null,"Add Validation Here");
                    }else{

                        Statement stmt = dbconnect.createStatement();
                        sql = "DELETE FROM m_student WHERE student_id = '"+key+"'";
                        stmt.executeUpdate(sql);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(student_list_form.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                System.out.println("No Option");
            }
            show_list(where);

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Tidak ada baris terseleksi ");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
          try
        {   
            String payref = "";
            if (table_list_payment.getRowCount() > 0) {
                if (table_list_payment.getSelectedRowCount() > 0) {
                int[] selectedRow = table_list_payment.getSelectedRows();
                    for (int i : selectedRow) {
                            String payment_code       = table_list_payment.getValueAt(i,0).toString();
                            //String student_id         = table_list_payment.getValueAt(i,3).toString();
                         payref += "'"+payment_code+"',";
                    }
                    
                String ref      = payref.substring(0, payref.length()-1);
                key = (String) table_list_payment.getValueAt(table_list_payment.getSelectedRow(),3);
                String Query     = "SELECT a.*, b.payment_ref, b.payment_subject, b.payment_amount, b.payment_date, b.payment_status a "
                                   + " FROM t_payment b LEFT JOIN m_student a ON a.student_id = b.student_id WHERE b.student_id = '"+key+"' AND b.payment_ref IN ("+ref+")";
                System.out.println(Query);
                Map params=new HashMap();
                params.put("QueryString",Query);

                JasperReport jasperReport = JasperCompileManager.compileReport(new File("").getAbsolutePath()+"\\src\\laporan\\payment_reports.jrxml"); 
                JasperPrint jasperPrint =
                    JasperFillManager.fillReport(
                    jasperReport, params, dbconnect);

                //JasperExportManager.exportReportToHtmlFile(
                //    jasperPrint, new File("").getAbsolutePath()+"\\src\\laporan\\student_report_list_htm"+".html");

                JasperViewer.viewReport(jasperPrint, false);
                    
                }else JOptionPane.showMessageDialog(rootPane,"Error : Tidak ada data terseleksi!","Error",JOptionPane.ERROR_MESSAGE);
            }
            
        }
        catch (JRException e)
        {
            JOptionPane.showMessageDialog(rootPane,"Exception : "+e,"Exception",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_printActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_new;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton filter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField param1;
    private javax.swing.JTextField param2;
    private javax.swing.JTextField param3;
    private javax.swing.JTextField param4;
    private javax.swing.JTextField param5;
    private javax.swing.JComboBox param6;
    private javax.swing.JButton print;
    private javax.swing.JTable table_list_payment;
    // End of variables declaration//GEN-END:variables

    private void show_list(String str_where) {        
        Object [] rows={"Payment Reff","Kode Tunggakan","Subjek","NIS","Nama Siswa","Besar Pembayaran","Status"};
            table_list=new DefaultTableModel(null,rows);
            table_list_payment.setModel(table_list);
            table_list_payment.setBorder(null);
            jScrollPane1.setVisible(true);
            jScrollPane1.setViewportView(table_list_payment);
            
            try{
                
                //String sql="select * from m_student";
                 if(!str_where.equals("")){
                     sql  = "SELECT * FROM list_payment "+str_where;
                 }else{
                     sql  = "SELECT * FROM list_payment";
                 }
                System.out.println(sql); 
                Statement st = dbconnect.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next()){
                    String payment_ref          = rs.getString("payment_ref");
                    String debt_code            = rs.getString("debt_code");
                    String subject              = rs.getString("payment_subject");
                    String student_id           = rs.getString("student_id");
                    String student_name         = rs.getString("student_fullname");
                    String payment_amount       = rs.getString("payment_amount");
                    String payment_status       = rs.getString("payment_status");

                    String [] tampil={payment_ref, debt_code, subject, student_id, student_name, payment_amount, payment_status};
                    table_list.addRow(tampil);
                }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Terdapat kesalahan query : "+e);
            }
    }
}
